#!/bin/bash

curdir="$(dirname "$(readlink -f "$0")")"

get_iface(){
	local wireless_up="$(cat /proc/net/wireless | wc -l)"
	local net_iface
	if [ $wireless_up -ge 3 ]; then
		net_iface="$(tail -n1 /proc/net/wireless | cut -d':' -f1)"
	else
		net_iface="$(ip route ls | grep "default via 192.168.1.1" | awk '{print $5}')"
		#readonly WIFI_INTERFACE="wlp11s0"
	fi
	echo -n "$net_iface"
}

net_up(){
	if [ "$#" -lt 1 ]; then
		echo "net_up requires interface name as an argument" >&2
		exit 1
	fi

	local net_state=$(</sys/class/net/$1/operstate) #whether the network is connected

	if [ "$net_state" = "up" ]; then
		return 0
	else
		return 1
	fi

}

main(){
	local interface

	while :; do
		interface="$(get_iface)"

		#print internal IP if network is running
		if net_up "$interface"; then

			#check if VPN connection is running
			if pgrep -x openvpn >/dev/null 2>&1; then
				icon="${C_TITLE}${ic_network}${ic_lock}${C_RST}"
			else
				icon="${C_TITLE}${ic_network}${C_WARN}${ic_warn}${C_RST}"
			fi

			#text="$(popup_script "network" "${icon}") $(ifconfig $NET_INTERFACE | grep inet | grep -v inet6 | awk '{print $2}')"
			text="%{A:$curdir/popups/network:}${icon}%{A} $(ifconfig $interface | grep 'inet ' | awk '{print $2}')"
		else
			text="${ic_fail}"
		fi

		echo -e "$text"

		sleep 93
	done
}

main $@


